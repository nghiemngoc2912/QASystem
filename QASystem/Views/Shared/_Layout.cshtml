<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - QASystem</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/QASystem.styles.css" asp-append-version="true" />
    <script src="https://cdn.tiny.cloud/1/n8ym3t5lv2dq4ofxfe2b40tllfqny4axrpxdeajyfyqfxmub/tinymce/7/tinymce.min.js" referrerpolicy="origin"></script>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">QASystem</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Materials" asp-action="Index">Materials</a>
                        </li>
                    </ul>
                    <ul class="navbar-nav ms-auto">
                        @if (User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" id="accountDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    @User.Identity.Name
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="accountDropdown">
                                    <li>
                                        <a class="dropdown-item" asp-controller="Account" asp-action="Profile">Profile</a>
                                    </li>
                                    <li>
                                        <form asp-controller="Account" asp-action="Logout" method="post">
                                            <button type="submit" class="dropdown-item">Logout</button>
                                        </form>
                                    </li>
                                    @if (User.IsInRole("Admin") || User.IsInRole("Moderator"))
                                    {
                                        <li><hr class="dropdown-divider"></li>
                                        <li>
                                            <a class="dropdown-item" asp-controller="Admin" asp-action="ManageReports">Manage Reports</a>
                                        </li>
                                        @if (User.IsInRole("Admin"))
                                        {
                                            <li>
                                                <a class="dropdown-item" asp-controller="Admin" asp-action="ManageUsers">Manage Users</a>
                                            </li>
                                        }
                                    }
                                </ul>
                            </li>

                            @* notification *@

                            <div id="notificationContainer">
                                @await Component.InvokeAsync("Notification")
                            </div>

                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Login">Login</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" asp-controller="Account" asp-action="Register">Register</a>
                            </li>
                        }
                    </ul>

                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2025 - QASystem - Group 6 - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
	<script src="~/microsoft/signalr/dist/browser/signalr.js"></script>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // 1. Khởi tạo SignalR connection
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/notificationHub")
                .build();

            // 2. Khi có event ReceiveNotification, gọi AJAX để fetch lại Partial
            connection.on("NewNotification", function () {
                fetch('/Notifications/Partial')
                    .then(r => r.ok ? r.text() : Promise.reject('Error'))
                    .then(html => {
                        document.getElementById('notificationContainer').innerHTML = html;
                    })
                    .catch(err => console.error(err));
            });

            // 3. Start connection
            connection.start()
                .catch(err => console.error('SignalR connection error:', err));
        });
    </script>


    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
